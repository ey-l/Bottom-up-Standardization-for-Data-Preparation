import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import os
for (dirname, _, filenames) in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
_input1 = pd.read_csv('data/input/spaceship-titanic/train.csv')
_input0 = pd.read_csv('data/input/spaceship-titanic/test.csv')
_input1.sample(5)
_input0.sample(5)
_input1.info()
_input1.isnull().sum()
_input1['Transported'].value_counts()
_input1['con_PassId'] = _input1['PassengerId'].apply(lambda x: int(''.join(x.split('_')))).astype(int)
_input1['HomePlanet'] = _input1['HomePlanet'].fillna(method='ffill')
_input1['HomePlanet'].value_counts()
_input1['Cryo_int_val'] = _input1['CryoSleep'].replace([False, True], [0, 1])
_input1['Cryo_int_val'] = _input1['Cryo_int_val'].fillna(_input1['Cryo_int_val'].fillna(method='ffill')).astype(int)
_input1['Cryo_int_val'].value_counts()
_input1['Cabin'] = _input1['Cabin'].fillna(method='ffill')
_input1['Cabin_letter'] = _input1['Cabin'].apply(lambda x: ''.join(x.split('/')[0::2]))
_input1['Cabin_num'] = _input1['Cabin'].apply(lambda x: ''.join(x.split('/')[1]))
print(_input1['Cabin_letter'].value_counts(), _input1['Cabin_num'].value_counts())
_input1['Destination'] = _input1['Destination'].fillna(method='ffill')
_input1['Destination'].value_counts()
_input1['Age'] = _input1['Age'].fillna(_input1['Age'].median())
_input1['Age'].value_counts()
_input1['VIP_int_val'] = _input1['VIP'].replace([False, True], [0, 1])
_input1['VIP_int_val'] = _input1['VIP_int_val'].fillna(_input1['VIP_int_val'].fillna(method='ffill')).astype(int)
_input1['VIP_int_val'].value_counts()
_input1['RoomService'] = _input1['RoomService'].fillna(_input1['RoomService'].fillna(0))
_input1['FoodCourt'] = _input1['FoodCourt'].fillna(_input1['FoodCourt'].fillna(0))
_input1['ShoppingMall'] = _input1['ShoppingMall'].fillna(_input1['ShoppingMall'].fillna(0))
_input1['Spa'] = _input1['Spa'].fillna(_input1['Spa'].fillna(0))
_input1['VRDeck'] = _input1['VRDeck'].fillna(_input1['VRDeck'].fillna(0))
_input1['Name'] = _input1['Name'].fillna(method='ffill')
_input1['Surname'] = _input1['Name'].apply(lambda x: x.split(' ')[1])
_input1['Surname'].value_counts().head(20)
_input1 = _input1.drop(['CryoSleep', 'Cabin', 'VIP'], axis=1)
_input1.info()
_input1.isnull().sum()
_input1
pd.pivot_table(_input1, index='Transported', columns='HomePlanet', values='Name', aggfunc='count')
pd.pivot_table(_input1, index='Transported', columns='Destination', values='Name', aggfunc='count')
pd.pivot_table(_input1, index='Transported', columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(_input1, index='Transported', columns='VIP_int_val', values='Name', aggfunc='count')
pd.pivot_table(_input1, index='Transported', columns='Cryo_int_val', values='Name', aggfunc='count')
pd.pivot_table(_input1, index=['Transported', 'Cryo_int_val'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(_input1, index=['Transported', 'VIP_int_val'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(_input1, index=['Transported', 'HomePlanet'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(_input1, index=['Transported', 'Destination'], columns='Cabin_letter', values='Name', aggfunc='count')
sns.histplot(x='HomePlanet', data=_input1)
sns.histplot(x='Cryo_int_val', data=_input1)
sns.histplot(x='Cabin_letter', data=_input1)
sns.histplot(x='Destination', data=_input1)
sns.histplot(x='VIP_int_val', data=_input1)
sns.histplot(x='Age', data=_input1)
sns.countplot(x='Transported', data=_input1, hue='HomePlanet')
sns.countplot(x='Transported', data=_input1, hue='Destination')
sns.countplot(x='Transported', data=_input1, hue='Cryo_int_val')
sns.countplot(x='Cabin_letter', data=_input1, hue='Transported')
sns.countplot(x='Transported', data=_input1, hue='VIP_int_val')
sns.heatmap(_input1.corr())
_input1 = pd.read_csv('data/input/spaceship-titanic/train.csv')
_input0 = pd.read_csv('data/input/spaceship-titanic/test.csv')
_input1['train_test'] = 1
_input0['train_test'] = 0
_input0['Transported'] = np.dtype(bool)
space_titanic = pd.concat([_input1, _input0])
space_titanic.info()
space_titanic.isnull().sum()
space_titanic['PassengerId'] = space_titanic['PassengerId'].apply(lambda x: int(''.join(x.split('_')))).astype(int)
space_titanic['HomePlanet'] = space_titanic['HomePlanet'].fillna(method='ffill')
space_titanic['HomePlanet'].value_counts()
space_titanic['Cryo_int_val'] = space_titanic['CryoSleep'].replace([False, True], [0, 1])
space_titanic['Cryo_int_val'] = space_titanic['Cryo_int_val'].fillna(space_titanic['Cryo_int_val'].fillna(method='ffill')).astype(int)
space_titanic['Cryo_int_val'].value_counts()
space_titanic['Cabin'] = space_titanic['Cabin'].fillna(method='ffill')
space_titanic['Cabin_letter'] = space_titanic['Cabin'].apply(lambda x: ''.join(x.split('/')[0::2]))
space_titanic['Cabin_num'] = space_titanic['Cabin'].apply(lambda x: ''.join(x.split('/')[1]))
print(space_titanic['Cabin_letter'].value_counts(), space_titanic['Cabin_num'].value_counts())
space_titanic['Destination'] = space_titanic['Destination'].fillna(method='ffill')
space_titanic['Destination'].value_counts()
space_titanic['Age'] = space_titanic['Age'].fillna(_input1['Age'].median())
space_titanic['Age'].value_counts()
space_titanic['VIP_int_val'] = space_titanic['VIP'].replace([False, True], [0, 1])
space_titanic['VIP_int_val'] = space_titanic['VIP_int_val'].fillna(space_titanic['VIP_int_val'].fillna(method='ffill')).astype(int)
space_titanic['VIP_int_val'].value_counts()
space_titanic['RoomService'] = np.log(space_titanic['RoomService'] + 1)
space_titanic['RoomService'] = space_titanic['RoomService'].fillna(space_titanic['RoomService'].fillna(0))
space_titanic['FoodCourt'] = space_titanic['FoodCourt'].fillna(space_titanic['FoodCourt'].fillna(0))
space_titanic['FoodCourt'] = np.log(space_titanic['FoodCourt'] + 1)
space_titanic['ShoppingMall'] = space_titanic['ShoppingMall'].fillna(space_titanic['ShoppingMall'].fillna(0))
space_titanic['ShoppingMall'] = np.log(space_titanic['ShoppingMall'] + 1)
space_titanic['Spa'] = space_titanic['Spa'].fillna(space_titanic['Spa'].fillna(0))
space_titanic['Spa'] = np.log(space_titanic['Spa'] + 1)
space_titanic['VRDeck'] = space_titanic['VRDeck'].fillna(space_titanic['VRDeck'].fillna(0))
space_titanic['VRDeck'] = np.log(space_titanic['VRDeck'] + 1)
space_titanic['Name'] = space_titanic['Name'].fillna(method='ffill')
space_titanic['Surname'] = space_titanic['Name'].apply(lambda x: x.split(' ')[1])
space_titanic['Surname'].value_counts().head(20)
space_titanic.info()
space_titanic.isnull().sum()
features = ['HomePlanet', 'Destination', 'Age', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'train_test', 'Cryo_int_val', 'Cabin_letter', 'VIP_int_val']
Vector_object = pd.get_dummies(space_titanic[features])
Vector_object.sample(10)
X = Vector_object[Vector_object.train_test == 1].drop(['train_test'], axis=1)
X.shape
X
X_t = Vector_object[Vector_object.train_test == 0].drop(['train_test'], axis=1)
X_t.shape
y = space_titanic[space_titanic.train_test == 1].Transported
y = y.astype(int)
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split
(X_train, X_test, y_train, y_test) = train_test_split(X, y, test_size=0.2)
lr = LogisticRegression(max_iter=2000)