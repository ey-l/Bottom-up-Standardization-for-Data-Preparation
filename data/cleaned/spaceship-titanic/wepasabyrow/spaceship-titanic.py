import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import os
for (dirname, _, filenames) in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
train = pd.read_csv('data/input/spaceship-titanic/train.csv')
test = pd.read_csv('data/input/spaceship-titanic/test.csv')
train.sample(5)
test.sample(5)
train.info()
train.isnull().sum()
train['Transported'].value_counts()
train['con_PassId'] = train['PassengerId'].apply(lambda x: int(''.join(x.split('_')))).astype(int)
train['HomePlanet'] = train['HomePlanet'].fillna(method='ffill')
train['HomePlanet'].value_counts()
train['Cryo_int_val'] = train['CryoSleep'].replace([False, True], [0, 1])
train['Cryo_int_val'] = train['Cryo_int_val'].fillna(train['Cryo_int_val'].fillna(method='ffill')).astype(int)
train['Cryo_int_val'].value_counts()
train['Cabin'] = train['Cabin'].fillna(method='ffill')
train['Cabin_letter'] = train['Cabin'].apply(lambda x: ''.join(x.split('/')[0::2]))
train['Cabin_num'] = train['Cabin'].apply(lambda x: ''.join(x.split('/')[1]))
print(train['Cabin_letter'].value_counts(), train['Cabin_num'].value_counts())
train['Destination'] = train['Destination'].fillna(method='ffill')
train['Destination'].value_counts()
train['Age'] = train['Age'].fillna(train['Age'].median())
train['Age'].value_counts()
train['VIP_int_val'] = train['VIP'].replace([False, True], [0, 1])
train['VIP_int_val'] = train['VIP_int_val'].fillna(train['VIP_int_val'].fillna(method='ffill')).astype(int)
train['VIP_int_val'].value_counts()
train['RoomService'] = train['RoomService'].fillna(train['RoomService'].fillna(0))
train['FoodCourt'] = train['FoodCourt'].fillna(train['FoodCourt'].fillna(0))
train['ShoppingMall'] = train['ShoppingMall'].fillna(train['ShoppingMall'].fillna(0))
train['Spa'] = train['Spa'].fillna(train['Spa'].fillna(0))
train['VRDeck'] = train['VRDeck'].fillna(train['VRDeck'].fillna(0))
train['Name'] = train['Name'].fillna(method='ffill')
train['Surname'] = train['Name'].apply(lambda x: x.split(' ')[1])
train['Surname'].value_counts().head(20)
train = train.drop(['CryoSleep', 'Cabin', 'VIP'], axis=1)
train.info()
train.isnull().sum()
train
pd.pivot_table(train, index='Transported', columns='HomePlanet', values='Name', aggfunc='count')
pd.pivot_table(train, index='Transported', columns='Destination', values='Name', aggfunc='count')
pd.pivot_table(train, index='Transported', columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(train, index='Transported', columns='VIP_int_val', values='Name', aggfunc='count')
pd.pivot_table(train, index='Transported', columns='Cryo_int_val', values='Name', aggfunc='count')
pd.pivot_table(train, index=['Transported', 'Cryo_int_val'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(train, index=['Transported', 'VIP_int_val'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(train, index=['Transported', 'HomePlanet'], columns='Cabin_letter', values='Name', aggfunc='count')
pd.pivot_table(train, index=['Transported', 'Destination'], columns='Cabin_letter', values='Name', aggfunc='count')
sns.histplot(x='HomePlanet', data=train)
sns.histplot(x='Cryo_int_val', data=train)
sns.histplot(x='Cabin_letter', data=train)
sns.histplot(x='Destination', data=train)
sns.histplot(x='VIP_int_val', data=train)
sns.histplot(x='Age', data=train)
sns.countplot(x='Transported', data=train, hue='HomePlanet')
sns.countplot(x='Transported', data=train, hue='Destination')
sns.countplot(x='Transported', data=train, hue='Cryo_int_val')
sns.countplot(x='Cabin_letter', data=train, hue='Transported')
sns.countplot(x='Transported', data=train, hue='VIP_int_val')
sns.heatmap(train.corr())
train = pd.read_csv('data/input/spaceship-titanic/train.csv')
test = pd.read_csv('data/input/spaceship-titanic/test.csv')
train['train_test'] = 1
test['train_test'] = 0
test['Transported'] = np.dtype(bool)
space_titanic = pd.concat([train, test])
space_titanic.info()
space_titanic.isnull().sum()
space_titanic['PassengerId'] = space_titanic['PassengerId'].apply(lambda x: int(''.join(x.split('_')))).astype(int)
space_titanic['HomePlanet'] = space_titanic['HomePlanet'].fillna(method='ffill')
space_titanic['HomePlanet'].value_counts()
space_titanic['Cryo_int_val'] = space_titanic['CryoSleep'].replace([False, True], [0, 1])
space_titanic['Cryo_int_val'] = space_titanic['Cryo_int_val'].fillna(space_titanic['Cryo_int_val'].fillna(method='ffill')).astype(int)
space_titanic['Cryo_int_val'].value_counts()
space_titanic['Cabin'] = space_titanic['Cabin'].fillna(method='ffill')
space_titanic['Cabin_letter'] = space_titanic['Cabin'].apply(lambda x: ''.join(x.split('/')[0::2]))
space_titanic['Cabin_num'] = space_titanic['Cabin'].apply(lambda x: ''.join(x.split('/')[1]))
print(space_titanic['Cabin_letter'].value_counts(), space_titanic['Cabin_num'].value_counts())
space_titanic['Destination'] = space_titanic['Destination'].fillna(method='ffill')
space_titanic['Destination'].value_counts()
space_titanic['Age'] = space_titanic['Age'].fillna(train['Age'].median())
space_titanic['Age'].value_counts()
space_titanic['VIP_int_val'] = space_titanic['VIP'].replace([False, True], [0, 1])
space_titanic['VIP_int_val'] = space_titanic['VIP_int_val'].fillna(space_titanic['VIP_int_val'].fillna(method='ffill')).astype(int)
space_titanic['VIP_int_val'].value_counts()
space_titanic['RoomService'] = np.log(space_titanic['RoomService'] + 1)
space_titanic['RoomService'] = space_titanic['RoomService'].fillna(space_titanic['RoomService'].fillna(0))
space_titanic['FoodCourt'] = space_titanic['FoodCourt'].fillna(space_titanic['FoodCourt'].fillna(0))
space_titanic['FoodCourt'] = np.log(space_titanic['FoodCourt'] + 1)
space_titanic['ShoppingMall'] = space_titanic['ShoppingMall'].fillna(space_titanic['ShoppingMall'].fillna(0))
space_titanic['ShoppingMall'] = np.log(space_titanic['ShoppingMall'] + 1)
space_titanic['Spa'] = space_titanic['Spa'].fillna(space_titanic['Spa'].fillna(0))
space_titanic['Spa'] = np.log(space_titanic['Spa'] + 1)
space_titanic['VRDeck'] = space_titanic['VRDeck'].fillna(space_titanic['VRDeck'].fillna(0))
space_titanic['VRDeck'] = np.log(space_titanic['VRDeck'] + 1)
space_titanic['Name'] = space_titanic['Name'].fillna(method='ffill')
space_titanic['Surname'] = space_titanic['Name'].apply(lambda x: x.split(' ')[1])
space_titanic['Surname'].value_counts().head(20)
space_titanic.info()
space_titanic.isnull().sum()
features = ['HomePlanet', 'Destination', 'Age', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'train_test', 'Cryo_int_val', 'Cabin_letter', 'VIP_int_val']
Vector_object = pd.get_dummies(space_titanic[features])
Vector_object.sample(10)
X = Vector_object[Vector_object.train_test == 1].drop(['train_test'], axis=1)
X.shape
X
X_t = Vector_object[Vector_object.train_test == 0].drop(['train_test'], axis=1)
X_t.shape
y = space_titanic[space_titanic.train_test == 1].Transported
y = y.astype(int)
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split
(X_train, X_test, y_train, y_test) = train_test_split(X, y, test_size=0.2)
lr = LogisticRegression(max_iter=2000)