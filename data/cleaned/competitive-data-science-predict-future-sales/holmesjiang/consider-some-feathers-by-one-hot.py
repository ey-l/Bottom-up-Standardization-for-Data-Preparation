import numpy as np
import pandas as pd
import datetime
train = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/sales_train.csv')
print(train.head(10))
train['date'] = pd.to_datetime(train['date'], format='%d.%m.%Y')
train['month'] = train['date'].dt.month
train['year'] = train['date'].dt.year
train = train.drop(['date'], axis=1)
print(train.head(10))
import matplotlib.pyplot as plt
print('原列数：')
print(train['item_price'].shape[0])
print('统计：')
print(train['item_price'].describe())
print('缺失数：')
print(train['item_price'].isnull().describe)
plt.hist(train['item_price'], bins=15)
plt.title('hist picture')
plt.xlabel('item price ')
plt.ylabel('item price distribution count')

plt.hist(train['item_price'], bins=15)
plt.ylim(0, 100)
plt.title('hist picture ylimit 100')
plt.xlabel('item price ')
plt.ylabel('item price distribution count')

print('train.item_price.min %d ' % train.item_price.min())
print('train.item_price.max %d ' % train.item_price.max())
print('train.item_price.mean %d ' % train.item_price.mean())
print('train.item_price.median %d ' % train.item_price.median())
print('------------------------------------------------')
print('inital train shape:', train.shape)
train = train[(train.item_price > 0) & (train.item_price < 300000)]
print('after choose train shape:', train.shape)
print('after choose train------------------------------')
print('train.item_price.min %d ' % train.item_price.min())
print('train.item_price.max %d ' % train.item_price.max())
print('train.item_price.mean %d ' % train.item_price.mean())
print('train.item_price.median %d ' % train.item_price.median())
print('------------------------------------------------')
print(train.item_price.value_counts().sort_index(ascending=False))
print('train.item_cnt_day.min: %d' % train.item_cnt_day.min())
print('train.item_cnt_day.max: %d' % train.item_cnt_day.max())
print('train.item_cnt_day.mean: %d' % train.item_cnt_day.mean())
print('train.item_cnt_day.median: %d' % train.item_cnt_day.median())
plt.hist(train['item_cnt_day'], bins=10)
plt.title('hist item cnt day')

train.groupby('date_block_num').sum()['item_cnt_day'].hist()
plt.title('Sales per month histogram')

plt.plot(train.groupby('date_block_num').sum()['item_cnt_day'])
plt.title('Sales per month')

items = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/items.csv')
train = train.drop(['item_price'], axis=1)
train = train.groupby([c for c in train.columns if c not in ['item_cnt_day']], as_index=False)[['item_cnt_day']].sum()
train = train.rename(columns={'item_cnt_day': 'item_cnt_month'})
train = pd.merge(train, items, how='left', on=['item_id'])
train = train.drop(['item_name'], axis=1)
print(train.head(10))
print(train.isnull().any().describe())
print(train.isnull().all().describe())
plt.hist(train['item_cnt_month'], bins=15)
plt.title('item_cnt_month original')

y2 = np.log1p(train['item_cnt_month'].clip(0.0, 20.0))
plt.hist(y2, bins=20)
plt.title('item_cnt_month after log1p')

test = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/test.csv')
print(test.head(10))
print(test.isnull().any().describe())
print(test.isnull().all().describe())
test = pd.merge(test, items, how='left', on=['item_id'])
test = test.drop(['item_name'], axis=1)
print(test.head(10))
print(test.isnull().any().describe())
print(test.isnull().all().describe())
print('这是train的数据————————————————')
print('train.shop_id.min: %d' % train.shop_id.min())
print('train.shop_id.max: %d' % train.shop_id.max())
print('train.shop_id.mean: %d' % train.shop_id.mean())
print('train.shop_id.median: %d' % train.shop_id.median())
print('这是test的数据—————————————————')
print('test.shop_id.min: %d' % test.shop_id.min())
print('test.shop_id.max: %d' % test.shop_id.max())
print('test.shop_id.mean: %d' % test.shop_id.mean())
print('test.shop_id.median: %d' % test.shop_id.median())
print('————————————————————————')
print(train.head(10))
label = pd.get_dummies(train['shop_id'])
print(label.head(5))
for i in range(60):
    label.rename(columns={label.columns[i]: 'shop_id_' + str(i)}, inplace=True)
train_shop_id = train.drop(['shop_id'], axis=1)
train_shop_id = pd.concat([train_shop_id, label], axis=1)
print(train_shop_id.head(5))
train_shop_id2 = train_shop_id.drop(['item_category_id'], axis=1)
train_shop_id2 = train_shop_id2.drop(['item_id'], axis=1)
print(train_shop_id2.head(5))
train_shop_id2 = train_shop_id2.groupby([c for c in train_shop_id2.columns if c not in ['item_cnt_month']], as_index=False)[['item_cnt_month']].sum()
print(train_shop_id2.head(5))

