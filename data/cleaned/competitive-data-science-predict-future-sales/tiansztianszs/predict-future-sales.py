import warnings
warnings.filterwarnings('ignore')
import pandas as pd
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)
pd.set_option('display.expand_frame_repr', False)
pd.set_option('display.max_colwidth', 100)
train_data = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/sales_train.csv')
train_data.head()
test_data = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/test.csv')
test_data.head()
items = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/items.csv')
items.head()
item_categories = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/item_categories.csv')
item_categories.head()
shops = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/shops.csv')
shops.head()
sample_submission = pd.read_csv('_data/input/competitive-data-science-predict-future-sales/sample_submission.csv')
sample_submission.head()
train_data.drop(['date', 'item_price'], axis=1, inplace=True)
train_data.head()
train_data = pd.merge(train_data, items.loc[:, ['item_id', 'item_category_id']], how='left', on='item_id')
train_data.head()
train_data = train_data.groupby(['date_block_num', 'shop_id', 'item_id', 'item_category_id']).agg('sum')
train_data.reset_index(inplace=True)
train_data = pd.DataFrame(train_data)
train_data.rename(columns={'item_cnt_day': 'item_cnt_month'}, inplace=True)
train_data.head()
train_data.tail()
test_data = pd.merge(test_data, items.loc[:, ['item_id', 'item_category_id']], how='left', on='item_id')
test_data.head()
test_data['date_block_num'] = 34
test_data.head()
test_data.drop(['ID'], axis=1, inplace=True)
test_data.head()
all_data = pd.concat((train_data, test_data)).reset_index(drop=True)
all_data.head()
all_data.isna().sum().sort_values(ascending=False)
(train_data.shape, test_data.shape, all_data.shape)
train_data = all_data.iloc[:1609124, :]
test_data = all_data.iloc[-214200:, :]
(train_data.shape, test_data.shape)
test_data.drop(['item_cnt_month'], axis=1, inplace=True)
x_train = train_data.drop('item_cnt_month', axis=1)
y_train = train_data[['item_cnt_month']]
(x_train.shape, y_train.shape)
from catboost import CatBoostRegressor
cat = CatBoostRegressor()